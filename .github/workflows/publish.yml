name: NPM Publish

on:
  push:
    branches: [ main, master ]

jobs:
  Main: 
    name: Publishing
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      packages: write
    
    steps:
      - name : Checkout code
        uses : actions/checkout@v3

      - name: Setup node  
        uses: actions/setup-node@v3
        with:
          node-version: 12

      - name: Getting branch version
        run: |
              BRANCH=${GITHUB_REF##*/}
              echo "BRANCH=$BRANCH" >> $GITHUB_ENV

      - name: NPM Publishing
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.AIX_NPM_PUBLISH }}
          registry: https://registry.npmjs.org/
          access: "public"
      
      - name: Reading version from package.json
        run: |
              PKG_VERSION=$(cat package.json \
                | grep version \
                | head -1 \
                | awk -F: '{ print $2 }' \
                | sed 's/[", ]//g') ; \
              echo "PKG_VERSION=$PKG_VERSION" >> $GITHUB_ENV
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Evaluating docker image tag
        run: |
              [ ${{ env.BRANCH }} == alpha ] && DOCKER_TAG=alpha ;\
              [ ${{ env.BRANCH }} == master ] && DOCKER_TAG=latest ;\
              echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV

      - name: Building docker image & pushing
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            anlixhub/genieacs-sim:${{ env.PKG_VERSION }},
            anlixhub/genieacs-sim:${{ env.DOCKER_TAG }}
      
      - name: Create Tag & push
        run: |
          git config --global user.email ${{ github.actor }}@users.noreply.github.com
          git config --global user.name "GitHub Actions"
          git tag -a "v${{ env.PKG_VERSION }}" -m "v${{ env.PKG_VERSION }}"
          git push origin v${{ env.PKG_VERSION }}
